"use strict";(self.webpackChunkpush_website=self.webpackChunkpush_website||[]).push([[85301],{66492:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>a,metadata:()=>r,toc:()=>c});var i=n(85893),o=n(11151);n(74866),n(85162),n(23734);const a={id:"docs-notifications-develop-types-of-notification",title:"Types of Notification",hide_title:!0,slug:"./types-of-notification",displayed_sidebar:"pushNotificationSidebar",sidebar_position:11,image:"/assets/docs/previews/docs_notifications_develop--types_of_notification.png"},s="Types of notification overview",r={id:"notifications/build/docs-notifications-develop-types-of-notification",title:"Types of Notification",description:"Before sending notifications, it's important to learn about their types to help in choosing what notifications you want to send and when.",source:"@site/docs/notifications/01-build/11-Develop-Types-Of-Notification.mdx",sourceDirName:"notifications/01-build",slug:"/notifications/build/types-of-notification",permalink:"/docs/notifications/build/types-of-notification",draft:!1,unlisted:!1,editUrl:"https://github.com/ethereum-push-notification-service/push-website/blob/main/docs/notifications/01-build/11-Develop-Types-Of-Notification.mdx",tags:[],version:"current",sidebarPosition:11,frontMatter:{id:"docs-notifications-develop-types-of-notification",title:"Types of Notification",hide_title:!0,slug:"./types-of-notification",displayed_sidebar:"pushNotificationSidebar",sidebar_position:11,image:"/assets/docs/previews/docs_notifications_develop--types_of_notification.png"},sidebar:"pushNotificationSidebar",previous:{title:"Fetch Notifications",permalink:"/docs/notifications/build/fetch-notifications"},next:{title:"Send Notification",permalink:"/docs/notifications/build/send-notification"}},l={},c=[{value:"Types of Notification",id:"types-of-notification",level:2},{value:"Broadcast Notification (Type 1)",id:"broadcast-notification-type-1",level:3},{value:"Targeted Notification (Type 3)",id:"targeted-notification-type-3",level:3},{value:"Subset Notification (Type 4)",id:"subset-notification-type-4",level:3}];function u(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.a)(),...e.components},{Head:n}=t;return n||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"types-of-notification-overview",children:"Types of notification overview"}),"\n",(0,i.jsx)(t.p,{children:"Before sending notifications, it's important to learn about their types to help in choosing what notifications you want to send and when."}),"\n",(0,i.jsx)(n,{children:(0,i.jsx)("title",{children:"Types of Notifications | Push Notifications | Push Documentation"})}),"\n","\n","\n",(0,i.jsx)(t.h2,{id:"types-of-notification",children:"Types of Notification"}),"\n",(0,i.jsx)(t.p,{children:"Push Protocol supports sending the following types of notifications to users of your protocol \u2014"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Notification Type"}),(0,i.jsx)(t.th,{children:"Identifier"}),(0,i.jsx)(t.th,{children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Broadcast"}),(0,i.jsx)(t.td,{children:"1"}),(0,i.jsx)(t.td,{children:"This type of notification is broadcasted or sent to all the subscribers of a channel at once."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Targeted"}),(0,i.jsx)(t.td,{children:"3"}),(0,i.jsx)(t.td,{children:"This type of notification is sent to a single wallet address."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Subset"}),(0,i.jsx)(t.td,{children:"4"}),(0,i.jsx)(t.td,{children:"This type of notification is sent to a a subset (or a group) of your channel subscribers."})]})]})]}),"\n",(0,i.jsx)(t.h3,{id:"broadcast-notification-type-1",children:"Broadcast Notification (Type 1)"}),"\n",(0,i.jsx)(t.p,{children:"This type of notification is broadcasted or sent to all the subscribers of a channel at once."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-typescript",children:'// userAlice.channel.send([recipients], {options?})\n// to send a broadcast notification - pass \'*\' in recipients array\nconst broadcastNotif = await userAlice.channel.send(["*"], {\n  notification: { title: "test", body: "test" },\n});\n'})}),"\n",(0,i.jsx)(t.h3,{id:"targeted-notification-type-3",children:"Targeted Notification (Type 3)"}),"\n",(0,i.jsx)(t.p,{children:"This type of notification is sent to a single wallet address."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-typescript",children:'// userAlice.channel.send([recipients], {options?})\n// to send a targeted notification - pass that single wallet address in recipients array\nconst targetedNotif = await userAlice.channel.send(\n  ["0x99A08ac6254dcf7ccc37CeC662aeba8eFA666666"],\n  {\n    notification: {\n      title: "test",\n      body: "test",\n    },\n  },\n);\n'})}),"\n",(0,i.jsx)(t.h3,{id:"subset-notification-type-4",children:"Subset Notification (Type 4)"}),"\n",(0,i.jsx)(t.p,{children:"This type of notification is sent to a a subset (or a group) of your channel subscribers."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-typescript",children:'// userAlice.channel.send([recipients], {options?})\n// to send a subset notification - pass the list of wallet address in recipients array\nconst subsetNotif = await userAlice.channel.send(\n  [\n    randomWallet1,\n    randomWallet2,\n    signer.address,\n    "0x99A08ac6254dcf7ccc37CeC662aeba8eFA666666",\n  ],\n  {\n    notification: {\n      title: "test",\n      body: "test",\n    },\n  },\n);\n'})})]})}function d(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},85162:(e,t,n)=>{n.d(t,{Z:()=>s});n(67294);var i=n(86010);const o={tabItem:"tabItem_Ymn6"};var a=n(85893);function s(e){let{children:t,hidden:n,className:s}=e;return(0,a.jsx)("div",{role:"tabpanel",className:(0,i.default)(o.tabItem,s),hidden:n,children:t})}},74866:(e,t,n)=>{n.d(t,{Z:()=>w});var i=n(67294),o=n(86010),a=n(12466),s=n(16550),r=n(20469),l=n(91980),c=n(67392),u=n(50012);function d(e){var t,n;return null!==(t=null===(n=i.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))||void 0===n?void 0:n.filter(Boolean))&&void 0!==t?t:[]}function f(e){const{values:t,children:n}=e;return(0,i.useMemo)((()=>{const e=null!=t?t:function(e){return d(e).map((e=>{let{props:{value:t,label:n,attributes:i,default:o}}=e;return{value:t,label:n,attributes:i,default:o}}))}(n);return function(e){const t=(0,c.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error('Docusaurus error: Duplicate values "'+t.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[t,n])}function p(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function h(e){let{queryString:t=!1,groupId:n}=e;const o=(0,s.k6)(),a=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=n?n:null}({queryString:t,groupId:n});return[(0,l._X)(a),(0,i.useCallback)((e=>{if(!a)return;const t=new URLSearchParams(o.location.search);t.set(a,e),o.replace({...o.location,search:t.toString()})}),[a,o])]}function b(e){const{defaultValue:t,queryString:n=!1,groupId:o}=e,a=f(e),[s,l]=(0,i.useState)((()=>function(e){var t;let{defaultValue:n,tabValues:i}=e;if(0===i.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:i}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+n+'" but none of its children has the corresponding value. Available values are: '+i.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return n}const o=null!==(t=i.find((e=>e.default)))&&void 0!==t?t:i[0];if(!o)throw new Error("Unexpected error: 0 tabValues");return o.value}({defaultValue:t,tabValues:a}))),[c,d]=h({queryString:n,groupId:o}),[b,y]=function(e){let{groupId:t}=e;const n=function(e){return e?"docusaurus.tab."+e:null}(t),[o,a]=(0,u.Nk)(n);return[o,(0,i.useCallback)((e=>{n&&a.set(e)}),[n,a])]}({groupId:o}),v=(()=>{const e=null!=c?c:b;return p({value:e,tabValues:a})?e:null})();(0,r.Z)((()=>{v&&l(v)}),[v]);return{selectedValue:s,selectValue:(0,i.useCallback)((e=>{if(!p({value:e,tabValues:a}))throw new Error("Can't select invalid tab value="+e);l(e),d(e),y(e)}),[d,y,a]),tabValues:a}}var y=n(72389);const v={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var m=n(85893);function g(e){let{className:t,block:n,selectedValue:i,selectValue:s,tabValues:r}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,a.o5)(),u=e=>{const t=e.currentTarget,n=l.indexOf(t),o=r[n].value;o!==i&&(c(t),s(o))},d=e=>{var t;let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{var i;const t=l.indexOf(e.currentTarget)+1;n=null!==(i=l[t])&&void 0!==i?i:l[0];break}case"ArrowLeft":{var o;const t=l.indexOf(e.currentTarget)-1;n=null!==(o=l[t])&&void 0!==o?o:l[l.length-1];break}}null===(t=n)||void 0===t||t.focus()};return(0,m.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.default)("tabs",{"tabs--block":n},t),children:r.map((e=>{let{value:t,label:n,attributes:a}=e;return(0,m.jsx)("li",{role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,ref:e=>l.push(e),onKeyDown:d,onClick:u,...a,className:(0,o.default)("tabs__item",v.tabItem,null==a?void 0:a.className,{"tabs__item--active":i===t}),children:null!=n?n:t},t)}))})}function x(e){let{lazy:t,children:n,selectedValue:o}=e;const a=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=a.find((e=>e.props.value===o));return e?(0,i.cloneElement)(e,{className:"margin-top--md"}):null}return(0,m.jsx)("div",{className:"margin-top--md",children:a.map(((e,t)=>(0,i.cloneElement)(e,{key:t,hidden:e.props.value!==o})))})}function j(e){const t=b(e);return(0,m.jsxs)("div",{className:(0,o.default)("tabs-container",v.tabList),children:[(0,m.jsx)(g,{...e,...t}),(0,m.jsx)(x,{...e,...t})]})}function w(e){const t=(0,y.Z)();return(0,m.jsx)(j,{...e,children:d(e.children)},String(t))}},11151:(e,t,n)=>{n.d(t,{Z:()=>r,a:()=>s});var i=n(67294);const o={},a=i.createContext(o);function s(e){const t=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(a.Provider,{value:t},e.children)}}}]);