"use strict";(self.webpackChunkpush_website=self.webpackChunkpush_website||[]).push([[51216],{40695:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>d,default:()=>x,frontMatter:()=>o,metadata:()=>c,toc:()=>h});var i=t(85893),s=t(11151),r=t(74866),a=t(85162),l=t(34673);const o={id:"docs-chat-develop-initialize-user",title:"Initialize User",hide_title:!0,slug:"./initialize-user",displayed_sidebar:"pushChatSidebar",sidebar_position:2,image:"/assets/docs/previews/docs_chat_develop--initialize_user.png"},d="Initialize user overview",c={id:"chat/build/docs-chat-develop-initialize-user",title:"Initialize User",description:"Before you can start sending messages, or create conditional access group for your community, or send those chat requests to Vitalik.eth. you will need to initialize a user or re-authenticate the user. To do so you will use PushAPI.initialize call from @pushprotocol/restapi package.",source:"@site/docs/chat/01-build/02-Develop-Initialize-User.mdx",sourceDirName:"chat/01-build",slug:"/chat/build/initialize-user",permalink:"/docs/chat/build/initialize-user",draft:!1,unlisted:!1,editUrl:"https://github.com/ethereum-push-notification-service/push-website/blob/main/docs/chat/01-build/02-Develop-Initialize-User.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"docs-chat-develop-initialize-user",title:"Initialize User",hide_title:!0,slug:"./initialize-user",displayed_sidebar:"pushChatSidebar",sidebar_position:2,image:"/assets/docs/previews/docs_chat_develop--initialize_user.png"},sidebar:"pushChatSidebar",previous:{title:"Get Started",permalink:"/docs/chat/build/get-started"},next:{title:"Fetch Chats",permalink:"/docs/chat/build/fetch-chats"}},u={},h=[{value:"Initialize user API",id:"initialize-user-api",level:2},{value:"Setting the right environment",id:"setting-the-right-environment",level:3},{value:"Initialize user parameters",id:"initialize-user-parameters",level:3},{value:"Initialize user interface",id:"initialize-user-interface",level:3},{value:"Using for Lens / Cyberconnect / Any NFTs",id:"using-for-lens--cyberconnect--any-nfts",level:2},{value:"Standard Wallet Address",id:"standard-wallet-address",level:3},{value:"Chain Agnostic Wallet Address",id:"chain-agnostic-wallet-address",level:3},{value:"Lens profile / Cyberconnect profile / NFT profile",id:"lens-profile--cyberconnect-profile--nft-profile",level:3}];function p(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.a)(),...e.components},{Head:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"initialize-user-overview",children:"Initialize user overview"}),"\n",(0,i.jsxs)(n.p,{children:["Before you can start sending messages, or create conditional access group for your community, or send those chat requests to ",(0,i.jsx)(n.code,{children:"Vitalik.eth"}),". you will need to initialize a user or re-authenticate the user. To do so you will use ",(0,i.jsx)(n.code,{children:"PushAPI.initialize"})," call from ",(0,i.jsx)(n.code,{children:"@pushprotocol/restapi"})," package."]}),"\n",(0,i.jsx)(t,{children:(0,i.jsx)("title",{children:"Initialize User | Push Chat | Push Documentation"})}),"\n","\n","\n",(0,i.jsx)(n.h2,{id:"initialize-user-api",children:"Initialize user API"}),"\n",(0,i.jsx)(r.Z,{className:"codetabs",groupId:"code-examples",children:(0,i.jsx)(a.Z,{value:"js",attributes:{className:"codetab js"},default:!0,children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'import { PushAPI, CONSTANTS } from "@pushprotocol/restapi";\n\n// PushAPI.initialize(signer, {options?});\n// signer - pass the signer from your app and set env to \'prod\' for mainnet app\n// options? - optional, can pass initialization parameters for customization\nconst userAlice = await PushAPI.initialize(signer, { env: "prod" });\n'})})})}),"\n",(0,i.jsxs)(n.p,{children:["The function automatically initializes and returns the ",(0,i.jsx)(n.strong,{children:"Push user profile"})," object if one doesn't exist for the user or alternatively creates a new profile if the user has not been onboarded to Push network. This profile is used to interact with all function calls moving forward."]}),"\n",(0,i.jsx)(n.h3,{id:"setting-the-right-environment",children:"Setting the right environment"}),"\n",(0,i.jsx)(n.p,{children:"Push Network operates on the following environments \u2014"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Production"})," - You will need to set ",(0,i.jsx)(n.code,{children:"env"})," in ",(0,i.jsx)(n.code,{children:"options"})," object to 'prod' to enable mainnet apps communication."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Staging"})," - Set by default, can omit ",(0,i.jsx)(n.code,{children:"options"})," if testing your app on testnet."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"initialize-user-parameters",children:"Initialize user parameters"}),"\n",(0,i.jsx)(n.p,{children:"When initializing your user, you can customize the process using several parameters. Here's a breakdown:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Param"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Sub-Type"}),(0,i.jsx)(n.th,{children:"Default"}),(0,i.jsx)(n.th,{children:"Remarks"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.em,{children:(0,i.jsx)(n.code,{children:"signer"})})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"SignerType"})}),(0,i.jsx)(n.td,{children:"-"}),(0,i.jsx)(n.td,{children:"-"}),(0,i.jsx)(n.td,{children:"EthersV5 or Viem Signer"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"options"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"PushAPIInitializeProps"})}),(0,i.jsx)(n.td,{children:"-"}),(0,i.jsx)(n.td,{children:"-"}),(0,i.jsx)(n.td,{children:"Optional configuration properties for initializing the PushAPI."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"-"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"options.env"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"ENV"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"staging"})}),(0,i.jsx)(n.td,{children:"API env - 'prod' or 'staging'"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"-"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"options.progressHook"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"(progress: ProgressHookType) => void"})}),(0,i.jsx)(n.td,{children:"-"}),(0,i.jsx)(n.td,{children:"A callback function to receive progress updates during initialization."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"-"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"options.account"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:"-"}),(0,i.jsxs)(n.td,{children:["The ",(0,i.jsx)(n.a,{href:"/docs/chat/build/initialize-user#use-lens-profile--any-nfts--chain-agnostic-wallet-address",children:"account"})," to associate with the PushAPI. If not provided, it is derived from signer."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"-"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"options.version"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"ENC_TYPE_V3"})}),(0,i.jsxs)(n.td,{children:["The ",(0,i.jsx)(n.a,{href:"/docs/chat/concepts/encryption-version-in-push-chat",children:"encryption version"})," to use for the PushAPI"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"-"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"options.versionMeta"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"{ NFTPGP_V1 ?: password: string }"})}),(0,i.jsx)(n.td,{children:"-"}),(0,i.jsx)(n.td,{children:"Metadata related to the encryption version, including a password if needed."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"-"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"options.autoUpgrade"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"boolean"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"true"})}),(0,i.jsxs)(n.td,{children:["If ",(0,i.jsx)(n.code,{children:"true"}),", upgrades encryption keys to latest encryption version"]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"-"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"options.origin"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:"-"}),(0,i.jsx)(n.td,{children:"Specify origin or source while creating a Push Profile"})]})]})]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["Note: Parameters ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.code,{children:"in this style"})})," are mandatory."]}),"\n"]}),"\n",(0,i.jsx)(l.Z,{summary:"Expected response",children:"200 OK"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"initialize-user-interface",children:"Initialize user interface"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"/**\n * Initialization Parameters for PushAPI\n */\n\n/**\n * Specifies the type of signer.\n * Choose between EthersV5 or Viem Signer.\n */\ntype Signer = SignerType;\n\ninterface PushAPIInitializeProps {\n  /**\n   * Sets the API environment.\n   * Options: 'prod', 'staging', 'dev'\n   * Default: 'staging'\n   */\n  env?: ENV;\n\n  /**\n   * A callback function to receive updates during the initialization process.\n   */\n  progressHook?: (progress: ProgressHookType) => void;\n\n  /**\n   * The account you want to link with the PushAPI.\n   * If left empty, it'll use the account associated with your signer.\n   */\n  account?: string;\n\n  /**\n   * Specifies the encryption version for the PushAPI.\n   * Default: 'ENC_TYPE_V3'\n   */\n  version?: string;\n\n  /**\n   * Provides additional data related to your chosen encryption version,\n   * like a necessary password.\n   */\n  versionMeta?: {\n    NFTPGP_V1?: {\n      password: string;\n    };\n  };\n\n  /**\n   * When set to true, the system will automatically upgrade encryption keys\n   * to the latest available encryption version.\n   * Default: true\n   */\n  autoUpgrade?: boolean;\n\n  /**\n   * Defines the origin or source when setting up a Push Profile.\n   */\n  origin?: string;\n}\n\n/**\n * Initializes the PushAPI with given parameters.\n *\n * @param signer The type of signer (EthersV5 or Viem Signer).\n * @param options Optional configurations for initializing the PushAPI.\n */\nfunction initializePushAPI(signer: Signer, options?: PushAPIInitializeProps) {\n  // Initialization logic here\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"using-for-lens--cyberconnect--any-nfts",children:"Using for Lens / Cyberconnect / Any NFTs"}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsx)(n.p,{children:"Intermediate section, can be skipped unless you are planning to message NFT, .lens, .polygon or different blockchains."})}),"\n",(0,i.jsx)(n.p,{children:"Push Chat supports Lens, Cyberconnect, NFT wallets and any EVM or non-EVM wallets. Since address standards for all of these are different, we came up with a compatible standard that is chain agnostic to ensure cross-chain messaging or cross-nft messaging can become a reality."}),"\n",(0,i.jsxs)(n.p,{children:["This lead us to introduce support for multiple wallet address formats and coining the word ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.code,{children:"account"})})," instead of ",(0,i.jsx)(n.code,{children:"address"})," to be used in parameters wherever necessary."]}),"\n",(0,i.jsx)(n.h3,{id:"standard-wallet-address",children:"Standard Wallet Address"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Standard Wallet Address"})," - Standard wallet is supported and used by default"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.em,{children:(0,i.jsx)(n.code,{children:"usage"})})," - ",(0,i.jsx)(n.code,{children:"0x99A08ac6254dcf7ccc37CeC662aeba8eFA666666"})]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"chain-agnostic-wallet-address",children:"Chain Agnostic Wallet Address"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Chain Agnostic Wallet Address"})," - Pass ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"{chain_standard}:{account_id}"})})," format to use this instead of standard wallet address. SDK converts all normal wallet address to chain agnostic ones by default."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.em,{children:(0,i.jsx)(n.code,{children:"usage"})})," - ",(0,i.jsx)(n.code,{children:"eip155:0x99A08ac6254dcf7ccc37CeC662aeba8eFA666666"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.em,{children:(0,i.jsx)(n.code,{children:"usage"})})," - ",(0,i.jsx)(n.code,{children:"cosmos:cosmos1t2uflqwqe0fsj0shcfkrvpukewcw40yjj6hdc0"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.em,{children:(0,i.jsx)(n.code,{children:"usage"})})," - ",(0,i.jsx)(n.code,{children:"starknet:0x02dd1b492765c064eac4039e3841aa5f382773b598097a40073bd8b48170ab57"})]}),"\n"]}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["Blockchain Agnostic Wallet Address has been inspired by ",(0,i.jsx)(n.a,{href:"https://github.com/ChainAgnostic/CAIPs/blob/main/CAIPs/caip-10.md",children:"CAIP-10 standard"}),", which is a great step in marking wallet address blockchain agnostic."]})}),"\n",(0,i.jsx)(n.h3,{id:"lens-profile--cyberconnect-profile--nft-profile",children:"Lens profile / Cyberconnect profile / NFT profile"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"NFT profile"})," - Pass ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"nft:{chain_standard}:{nftChainId}:{nftContractAddress}:{nftTokenId}"})})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.em,{children:(0,i.jsx)(n.code,{children:"usage"})})," - ",(0,i.jsx)(n.code,{children:"nft:eip155:11155111:0x42af3147f17239341477113484752D5D3dda997B:2:1683058528"})]}),"\n"]})]})}function x(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},34673:(e,n,t)=>{t.d(n,{Z:()=>x});var i=t(67294),s=t(86010),r=t(72389),a=t(86043);const l={details:"details_lb9f",isBrowser:"isBrowser_bmU9",collapsibleContent:"collapsibleContent_i85q"};var o=t(85893);function d(e){return!!e&&("SUMMARY"===e.tagName||d(e.parentElement))}function c(e,n){return!!e&&(e===n||c(e.parentElement,n))}function u(e){let{summary:n,children:t,...u}=e;const h=(0,r.Z)(),p=(0,i.useRef)(null),{collapsed:x,setCollapsed:f}=(0,a.u)({initialState:!u.open}),[j,g]=(0,i.useState)(u.open),m=i.isValidElement(n)?n:(0,o.jsx)("summary",{children:null!=n?n:"Details"});return(0,o.jsxs)("details",{...u,ref:p,open:j,"data-collapsed":x,className:(0,s.default)(l.details,h&&l.isBrowser,u.className),onMouseDown:e=>{d(e.target)&&e.detail>1&&e.preventDefault()},onClick:e=>{e.stopPropagation();const n=e.target;d(n)&&c(n,p.current)&&(e.preventDefault(),x?(f(!1),g(!0)):f(!0))},children:[m,(0,o.jsx)(a.z,{lazy:!1,collapsed:x,disableSSRStyle:!0,onCollapseTransitionEnd:e=>{f(e),g(!e)},children:(0,o.jsx)("div",{className:l.collapsibleContent,children:t})})]})}const h={details:"details_b_Ee"},p="alert alert--info";function x(e){let{...n}=e;return(0,o.jsx)(u,{...n,className:(0,s.default)(p,h.details,n.className)})}},85162:(e,n,t)=>{t.d(n,{Z:()=>a});t(67294);var i=t(86010);const s={tabItem:"tabItem_Ymn6"};var r=t(85893);function a(e){let{children:n,hidden:t,className:a}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,i.default)(s.tabItem,a),hidden:t,children:n})}},74866:(e,n,t)=>{t.d(n,{Z:()=>w});var i=t(67294),s=t(86010),r=t(12466),a=t(16550),l=t(20469),o=t(91980),d=t(67392),c=t(50012);function u(e){var n,t;return null!==(n=null===(t=i.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))||void 0===t?void 0:t.filter(Boolean))&&void 0!==n?n:[]}function h(e){const{values:n,children:t}=e;return(0,i.useMemo)((()=>{const e=null!=n?n:function(e){return u(e).map((e=>{let{props:{value:n,label:t,attributes:i,default:s}}=e;return{value:n,label:t,attributes:i,default:s}}))}(t);return function(e){const n=(0,d.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error('Docusaurus error: Duplicate values "'+n.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function x(e){let{queryString:n=!1,groupId:t}=e;const s=(0,a.k6)(),r=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=t?t:null}({queryString:n,groupId:t});return[(0,o._X)(r),(0,i.useCallback)((e=>{if(!r)return;const n=new URLSearchParams(s.location.search);n.set(r,e),s.replace({...s.location,search:n.toString()})}),[r,s])]}function f(e){const{defaultValue:n,queryString:t=!1,groupId:s}=e,r=h(e),[a,o]=(0,i.useState)((()=>function(e){var n;let{defaultValue:t,tabValues:i}=e;if(0===i.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:i}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+t+'" but none of its children has the corresponding value. Available values are: '+i.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return t}const s=null!==(n=i.find((e=>e.default)))&&void 0!==n?n:i[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:n,tabValues:r}))),[d,u]=x({queryString:t,groupId:s}),[f,j]=function(e){let{groupId:n}=e;const t=function(e){return e?"docusaurus.tab."+e:null}(n),[s,r]=(0,c.Nk)(t);return[s,(0,i.useCallback)((e=>{t&&r.set(e)}),[t,r])]}({groupId:s}),g=(()=>{const e=null!=d?d:f;return p({value:e,tabValues:r})?e:null})();(0,l.Z)((()=>{g&&o(g)}),[g]);return{selectedValue:a,selectValue:(0,i.useCallback)((e=>{if(!p({value:e,tabValues:r}))throw new Error("Can't select invalid tab value="+e);o(e),u(e),j(e)}),[u,j,r]),tabValues:r}}var j=t(72389);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var m=t(85893);function b(e){let{className:n,block:t,selectedValue:i,selectValue:a,tabValues:l}=e;const o=[],{blockElementScrollPositionUntilNextRender:d}=(0,r.o5)(),c=e=>{const n=e.currentTarget,t=o.indexOf(n),s=l[t].value;s!==i&&(d(n),a(s))},u=e=>{var n;let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{var i;const n=o.indexOf(e.currentTarget)+1;t=null!==(i=o[n])&&void 0!==i?i:o[0];break}case"ArrowLeft":{var s;const n=o.indexOf(e.currentTarget)-1;t=null!==(s=o[n])&&void 0!==s?s:o[o.length-1];break}}null===(n=t)||void 0===n||n.focus()};return(0,m.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.default)("tabs",{"tabs--block":t},n),children:l.map((e=>{let{value:n,label:t,attributes:r}=e;return(0,m.jsx)("li",{role:"tab",tabIndex:i===n?0:-1,"aria-selected":i===n,ref:e=>o.push(e),onKeyDown:u,onClick:c,...r,className:(0,s.default)("tabs__item",g.tabItem,null==r?void 0:r.className,{"tabs__item--active":i===n}),children:null!=t?t:n},n)}))})}function v(e){let{lazy:n,children:t,selectedValue:s}=e;const r=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=r.find((e=>e.props.value===s));return e?(0,i.cloneElement)(e,{className:"margin-top--md"}):null}return(0,m.jsx)("div",{className:"margin-top--md",children:r.map(((e,n)=>(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==s})))})}function y(e){const n=f(e);return(0,m.jsxs)("div",{className:(0,s.default)("tabs-container",g.tabList),children:[(0,m.jsx)(b,{...e,...n}),(0,m.jsx)(v,{...e,...n})]})}function w(e){const n=(0,j.Z)();return(0,m.jsx)(y,{...e,children:u(e.children)},String(n))}},11151:(e,n,t)=>{t.d(n,{Z:()=>l,a:()=>a});var i=t(67294);const s={},r=i.createContext(s);function a(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);